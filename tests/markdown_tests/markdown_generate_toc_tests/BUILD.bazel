load("@cgrindel_bazel_starlib//bzlformat:defs.bzl", "bzlformat_pkg")

bzlformat_pkg(name = "bzlformat")

# GH140: Temporarily disable markdown while adding support for
# --incompatible_disallow_empty_glob.

# load("//markdown:defs.bzl", "markdown_generate_toc")
# load("@bazel_skylib//rules:diff_test.bzl", "diff_test")

# # MARK: - Test with standard TOC header and defaults

# markdown_generate_toc(
#     name = "structured_toc",
#     srcs = ["structured.md"],
# )

# diff_test(
#     name = "structured_toc_test",
#     file1 = ":structured_toc",
#     file2 = "expected_structured.md",
# )

# # MARK: - Test with standard TOC header, do not remove header entry

# markdown_generate_toc(
#     name = "structured_keep_toc_header_entry",
#     srcs = ["structured.md"],
#     remove_toc_header_entry = False,
# )

# diff_test(
#     name = "structured_keep_toc_header_entry_test",
#     file1 = ":structured_keep_toc_header_entry",
#     file2 = "expected_structured_keep_toc_header_entry.md",
# )

# # MARK: - Test with custom TOC header

# markdown_generate_toc(
#     name = "structured_custom_toc_header",
#     srcs = ["structured_custom_toc_header.md"],
#     toc_header = "Contents",
# )

# diff_test(
#     name = "structured_custom_toc_header_test",
#     file1 = ":structured_custom_toc_header",
#     file2 = "expected_structured_custom_toc_header.md",
# )

# # MARK: - Test with no TOC header

# markdown_generate_toc(
#     name = "structured_no_toc_header",
#     srcs = ["structured_no_toc_header.md"],
# )

# diff_test(
#     name = "structured_no_toc_header_test",
#     file1 = ":structured_no_toc_header",
#     file2 = "expected_structured_no_toc_header.md",
# )
