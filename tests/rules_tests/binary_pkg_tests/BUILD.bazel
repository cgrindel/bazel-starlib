load("@cgrindel_rules_bzlformat//bzlformat:bzlformat.bzl", "bzlformat_pkg")
load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("//rules:binary_pkg.bzl", "binary_pkg")
load("//rules:execute_binary.bzl", "execute_binary", "file_placeholder")

bzlformat_pkg(name = "bzlformat")

# MARK: - Hello World

sh_binary(
    name = "hello_world",
    srcs = ["hello_world.sh"],
)

binary_pkg(
    name = "hello_world_pkg",
    binary = ":hello_world",
)

sh_test(
    name = "hello_world_pkg_test",
    srcs = ["hello_world_pkg_test.sh"],
    data = [
        ":hello_world_pkg",
    ],
    deps = [
        "//lib/private:assertions",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

# MARK: - Binary with Data Files

write_file(
    name = "data_file",
    out = "data_file.txt",
    content = [
        "This is a data file.",
    ],
)

sh_binary(
    name = "process_file",
    srcs = ["process_file.sh"],
    data = [
        ":data_file",
    ],
    deps = [
        "@bazel_tools//tools/bash/runfiles",
    ],
)

binary_pkg(
    name = "process_file_pkg",
    binary = ":process_file",
)

sh_test(
    name = "process_file_pkg_test",
    srcs = ["process_file_pkg_test.sh"],
    data = [
        ":process_file_pkg",
    ],
    deps = [
        "//lib/private:assertions",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

# MARK: - Test execute_binary embedded

write_file(
    name = "arg_file",
    out = "arg_file.txt",
    content = [
        "This is an arg file.",
    ],
)

execute_binary(
    name = "exec_process_file",
    arguments = [
        "--file",
        file_placeholder("arg_file"),
    ],
    binary = ":process_file",
    file_arguments = {
        ":arg_file": "arg_file",
    },
)

binary_pkg(
    name = "exec_process_file_pkg",
    binary = ":exec_process_file",
)

sh_binary(
    name = "process_file_consumer",
    srcs = ["process_file_consumer.sh"],
    deps = [
        "//lib/private:fail",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

execute_binary(
    name = "process_file_consumer_eb",
    arguments = [
        "--process_file",
        file_placeholder("process_file"),
    ],
    binary = ":process_file_consumer",
    file_arguments = {
        ":exec_process_file_pkg": "process_file",
    },
)

sh_test(
    name = "process_file_consumer_eb_test",
    srcs = ["process_file_consumer_eb_test.sh"],
    data = [
        ":process_file_consumer_eb",
    ],
    deps = [
        "//lib/private:assertions",
        "@bazel_tools//tools/bash/runfiles",
    ],
)
