load("@bazel_binaries//:defs.bzl", "bazel_binaries")
load("@bazel_skylib//rules:build_test.bzl", "build_test")
load(
    "@rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_tests",
    "default_test_runner",
    "integration_test_utils",
)
load("//bzlformat:defs.bzl", "bzlformat_pkg")
load("//ci:defs.bzl", "ci_integration_test_params")

bzlformat_pkg(name = "bzlformat")

# MARK: - Build Tests

build_test(
    name = "public_api",
    targets = [
        "//updatesrc:defs",
    ],
)

# MARK: - Integration Tests

default_test_runner(
    name = "updatesrc_test_runner",
)

bazel_integration_tests(
    name = "updatesrc_test",
    timeout = "eternal",
    bazel_binaries = bazel_binaries,
    bazel_versions = bazel_binaries.versions.all,
    test_runner = ":updatesrc_test_runner",
    workspace_files = integration_test_utils.glob_workspace_files("workspace") + [
        "//:workspace_integration_test_files",
    ],
    workspace_path = "workspace",
)

test_suite(
    name = "smoke_integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = [
        integration_test_utils.bazel_integration_test_name(
            ":updatesrc_test",
            bazel_binaries.versions.current,
        ),
    ],
    visibility = ["//:__subpackages__"],
)

test_suite(
    name = "all_integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = integration_test_utils.bazel_integration_test_names(
        ":updatesrc_test",
        bazel_binaries.versions.all,
    ),
    visibility = ["//:__subpackages__"],
)

ci_integration_test_params(
    name = "all_test_params",
    bzlmod_modes = [
        "enabled",
        "disabled",
    ],
    oss = [
        "linux",
        "macos",
    ],
    test_names = integration_test_utils.bazel_integration_test_names(
        "updatesrc_test",
        bazel_binaries.versions.all,
    ),
    visibility = ["//:__subpackages__"],
)
