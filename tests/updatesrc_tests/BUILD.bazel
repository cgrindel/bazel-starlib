load("@cgrindel_rules_bzlformat//bzlformat:defs.bzl", "bzlformat_pkg")
load("@bazel_skylib//rules:build_test.bzl", "build_test")
load(
    "//updatesrc/private:updatesrc_update_test.bzl",
    "updatesrc_update_test",
)
load(
    "//updatesrc/private:updatesrc_update.bzl",
    "updatesrc_update",
)
load(":letters.bzl", "letters")

# MARK: - Build Tests

build_test(
    name = "public_api",
    targets = [
        "//updatesrc:deps",
        "//updatesrc:updatesrc",
    ],
)

# MARK: - Update Tests

_LETTERS = [
    "a",
    "b",
    "c",
]

_LETTER_STRUCTS = [
    letters.create(letter)
    for letter in _LETTERS
]

_LETTER_SRCS = [ls.src for ls in _LETTER_STRUCTS]

_LETTER_OUT_NAMES = [":" + ls.out_name for ls in _LETTER_STRUCTS]

[
    genrule(
        name = ls.src_name,
        srcs = [],
        outs = [ls.src],
        cmd = """\
echo "This is {filename}." > $@
""".format(filename = ls.src),
    )
    for ls in _LETTER_STRUCTS
]

[
    genrule(
        name = ls.out_name,
        srcs = [ls.src],
        outs = [ls.out],
        cmd = """\
echo "# Howdy" > $@
cat $(location {filename}) >> $@
""".format(filename = ls.src),
    )
    for ls in _LETTER_STRUCTS
]

updatesrc_update(
    name = "src_out",
    srcs = _LETTER_SRCS,
    outs = _LETTER_OUT_NAMES,
)

updatesrc_update_test(
    name = "src_out_test",
    srcs = _LETTER_SRCS,
    outs = _LETTER_OUT_NAMES,
    update_target = ":src_out",
)

bzlformat_pkg(name = "bzlformat")
