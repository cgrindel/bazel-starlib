load("@cgrindel_rules_bzlformat//bzlformat:bzlformat.bzl", "bzlformat_pkg")
load("//tests:integration_test_common.bzl", "GH_ENV_INHERIT", "INTEGRATION_TEST_TAGS")

bzlformat_pkg(name = "bzlformat")

sh_test(
    name = "get_gh_username_test",
    srcs = ["get_gh_username_test.sh"],
    deps = [
        "//lib/private:fail",
        "//lib/private:github",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

sh_test(
    name = "get_gh_auth_token_test",
    srcs = ["get_gh_auth_token_test.sh"],
    deps = [
        "//lib/private:fail",
        "//lib/private:github",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

sh_test(
    name = "is_github_repo_url_test",
    srcs = ["is_github_repo_url_test.sh"],
    deps = [
        "//lib/private:fail",
        "//lib/private:github",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

sh_test(
    name = "get_gh_repo_owner_test",
    srcs = ["get_gh_repo_owner_test.sh"],
    deps = [
        "//lib/private:fail",
        "//lib/private:github",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

sh_test(
    name = "get_gh_repo_name_test",
    srcs = ["get_gh_repo_name_test.sh"],
    deps = [
        "//lib/private:fail",
        "//lib/private:github",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

sh_test(
    name = "get_gh_api_base_url_test",
    srcs = ["get_gh_api_base_url_test.sh"],
    deps = [
        "//lib/private:fail",
        "//lib/private:github",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

# MARK: - Integration Tests

# TODO: Add test for get_gh_changelog

sh_test(
    name = "get_gh_auth_status_test",
    srcs = ["get_gh_auth_status_test.sh"],
    env_inherit = GH_ENV_INHERIT,
    tags = INTEGRATION_TEST_TAGS,
    deps = [
        "//lib/private:env",
        "//lib/private:fail",
        "//lib/private:github",
        "@bazel_tools//tools/bash/runfiles",
    ],
)

test_suite(
    name = "integration_tests",
    tags = INTEGRATION_TEST_TAGS,
    tests = [
        ":get_gh_auth_status_test",
    ],
    visibility = ["//:__subpackages__"],
)
