load("@bazel_binaries//:defs.bzl", "bazel_binaries")
load("@bazel_skylib//:bzl_library.bzl", "bzl_library")
load(
    "@rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_tests",
    "default_test_runner",
    "integration_test_utils",
)
load("//bzlformat:defs.bzl", "bzlformat_pkg")
load("//bzllib:defs.bzl", "lists")
load("//ci:defs.bzl", "ci_integration_test_params", "ci_test_params_suite")
load(":examples.bzl", "examples")

bzlformat_pkg(name = "bzlformat")

# Do not have Gazelle process the child workspace
# gazelle:exclude bzlmod_e2e/**

# MARK: - Integration Tests

_EXAMPLES = [
    examples.new(
        bzlmod_modes = ["enabled"],
        dirname = "bzlmod_e2e",
        oss = [
            "macos",
            "linux",
        ],
        target_compatible_with = select({
            "@cgrindel_bazel_starlib//bzlmod:is_enabled": [],
            "//conditions:default": ["@platforms//:incompatible"],
        }),
    ),
]

default_test_runner(name = "default_test_runner")

[
    bazel_integration_tests(
        name = "{}_test".format(example.dirname),
        timeout = "eternal",
        bazel_binaries = bazel_binaries,
        bazel_versions = bazel_binaries.versions.all,
        tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS + [
            # Avoid file permssion error when using disk and repository cache after
            # 7.0.0rc2 upgrade.
            # https://github.com/bazelbuild/bazel/issues/19908
            "no-sandbox",
        ],
        target_compatible_with = example.target_compatible_with,
        test_runner = ":default_test_runner",
        workspace_files = integration_test_utils.glob_workspace_files(example.dirname) + [
            "//:workspace_integration_test_files",
        ],
        workspace_path = example.dirname,
    )
    for example in _EXAMPLES
]

[
    ci_integration_test_params(
        name = "{}_test_params".format(example.dirname),
        bzlmod_modes = example.bzlmod_modes,
        oss = example.oss,
        test_names = integration_test_utils.bazel_integration_test_names(
            "{}_test".format(example.dirname),
            bazel_binaries.versions.all,
        ),
        visibility = ["//:__subpackages__"],
    )
    for example in _EXAMPLES
]

ci_test_params_suite(
    name = "all_test_params",
    test_params = [
        "{}_test_params".format(example.dirname)
        for example in _EXAMPLES
    ],
    visibility = ["//:__subpackages__"],
)

test_suite(
    name = "smoke_integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = [
        integration_test_utils.bazel_integration_test_name(
            ":{}_test".format(example.dirname),
            bazel_binaries.versions.current,
        )
        for example in _EXAMPLES
    ],
    visibility = ["//:__subpackages__"],
)

test_suite(
    name = "all_integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = lists.flatten([
        integration_test_utils.bazel_integration_test_names(
            ":{}_test".format(example.dirname),
            bazel_binaries.versions.all,
        )
        for example in _EXAMPLES
    ]),
    visibility = ["//:__subpackages__"],
)

# We do not want to pull everything into the release archive. We just need the
# bzlmod_e2e workspace.
filegroup(
    name = "all_files",
    srcs = glob(["bzlmod_e2e/**"]),
    visibility = ["//:__subpackages__"],
)

bzl_library(
    name = "examples",
    srcs = ["examples.bzl"],
    visibility = ["//visibility:public"],
)
